import logging
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update
from telegram.ext import CallbackContext, CallbackQueryHandler, MessageHandler, filters

# –•—Ä–∞–Ω–∏–º –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ—Ü–µ–ø—Ç–∞—Ö –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Å–ª–æ–≤–∞—Ä–µ
user_data = {}

# –ù–∞—Å—Ç—Ä–æ–∏–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(
    format="%(asctime)s - %(levelname)s - %(message)s",
    level=logging.INFO,
    handlers=[
        logging.StreamHandler(),
        logging.FileHandler("bot_logs.log")  # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤ —Ñ–∞–π–ª
    ]
)

async def send_recipe_confirmation(update: Update, title: str, recipe: str, ingredients: str):
    """
    –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ä–µ—Ü–µ–ø—Ç–æ–º –∏ –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è.
    """
    logging.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —Å —Ä–µ—Ü–µ–ø—Ç–æ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {update.message.from_user.id}")
    
    # –ö–Ω–æ–ø–∫–∏ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    keyboard = [
        [InlineKeyboardButton("‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm")],
        [InlineKeyboardButton("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å", callback_data="edit")]
    ]
    
    # –†–∞–∑–º–µ—Ç–∫–∞ –¥–ª—è –∫–Ω–æ–ø–æ–∫
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
    await update.message.reply_text(
        f"üçΩ **–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞**: {title}\n\n"
        f"üìù **–†–µ—Ü–µ–ø—Ç**:\n{recipe}\n\n"
        f"ü•¶ **–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã**:\n{ingredients}",
        reply_markup=reply_markup
    )
    logging.info("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å –∫–Ω–æ–ø–∫–∞–º–∏")


# –•–∞–Ω–¥–ª–µ—Ä —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
async def handle_edit(update: Update, context: CallbackContext):
    query = update.callback_query
    logging.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: {query.data} –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {query.from_user.id}")
    await query.answer()

    user_id = query.from_user.id
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user_info = user_data.get(user_id, {})
    title = user_info.get("title", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    recipe = user_info.get("recipe", "–ù–µ —É–∫–∞–∑–∞–Ω")
    ingredients = user_info.get("ingredients", "–ù–µ —É–∫–∞–∑–∞–Ω—ã")

    logging.info(f"–û–±—Ä–∞–±–æ—Ç–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ: {title}, {recipe}, {ingredients}")

    if query.data == "edit_name":
        user_data[user_id] = {"edit_stage": "edit_name"}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–¥–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await query.edit_message_text(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ (—Ç–µ–∫—É—â–µ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ: {title}):")
    
    elif query.data == "edit_recipe":
        user_data[user_id] = {"edit_stage": "edit_recipe"}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–¥–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await query.edit_message_text(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç (—Ç–µ–∫—É—â–∏–π —Ä–µ—Ü–µ–ø—Ç:\n{recipe}):")
    
    elif query.data == "edit_ingredients":
        user_data[user_id] = {"edit_stage": "edit_ingredients"}  # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞–¥–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        await query.edit_message_text(f"–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã (—Ç–µ–∫—É—â–∏–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:\n{ingredients}):")

    logging.info(f"–°—Ç–∞–¥–∏—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {user_data[user_id]['edit_stage']}")


# –•–∞–Ω–¥–ª–µ—Ä –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
async def handle_edit_input(update: Update, context: CallbackContext):
    user_id = update.message.from_user.id
    user_info = user_data.get(user_id, {})

    if "edit_stage" not in user_info:
        return  # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, –Ω–∏—á–µ–≥–æ –Ω–µ –¥–µ–ª–∞–µ–º

    stage = user_info["edit_stage"]
    logging.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {stage}")

    if stage == "edit_name":
        new_title = update.message.text
        if user_id not in user_data:
            user_data[user_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        user_data[user_id]["title"] = new_title  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞
        await update.message.reply_text(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {new_title}")
        logging.info(f"–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–æ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {new_title}")
    
    elif stage == "edit_recipe":
        new_recipe = update.message.text
        if user_id not in user_data:
            user_data[user_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        user_data[user_id]["recipe"] = new_recipe  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
        await update.message.reply_text(f"–†–µ—Ü–µ–ø—Ç –∏–∑–º–µ–Ω–µ–Ω –Ω–∞:\n{new_recipe}")
        logging.info(f"–†–µ—Ü–µ–ø—Ç –æ–±–Ω–æ–≤–ª–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {new_recipe}")
    
    elif stage == "edit_ingredients":
        new_ingredients = update.message.text
        if user_id not in user_data:
            user_data[user_id] = {}  # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
        user_data[user_id]["ingredients"] = new_ingredients  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–≤—ã–µ –∏–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã
        await update.message.reply_text(f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –∏–∑–º–µ–Ω–µ–Ω—ã –Ω–∞:\n{new_ingredients}")
        logging.info(f"–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã –æ–±–Ω–æ–≤–ª–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: {new_ingredients}")

    # –ó–∞–≤–µ—Ä—à–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    del user_data[user_id]["edit_stage"]  # –£–¥–∞–ª—è–µ–º —Å—Ç–∞–¥–∏—é —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è, —á—Ç–æ–±—ã –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø—Ä–æ—Ü–µ—Å—Å
    logging.info(f"–ó–∞–≤–µ—Ä—à–µ–Ω –ø—Ä–æ—Ü–µ—Å—Å —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"
    confirm_button = InlineKeyboardButton("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", callback_data="confirm_changes")
    keyboard = InlineKeyboardMarkup([[confirm_button]])

    await update.message.reply_text("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è:", reply_markup=keyboard)


# –•–∞–Ω–¥–ª–µ—Ä –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π
async def handle_confirm_changes(update: Update, context: CallbackContext):
    query = update.callback_query
    logging.info(f"–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞: –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å")
    await query.answer()

    user_id = query.from_user.id
    user_info = user_data.get(user_id, {})

    title = user_info.get("title", "–ù–µ —É–∫–∞–∑–∞–Ω–æ")
    recipe = user_info.get("recipe", "–ù–µ —É–∫–∞–∑–∞–Ω")
    ingredients = user_info.get("ingredients", "–ù–µ —É–∫–∞–∑–∞–Ω—ã")

    logging.info(f"–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}, –¥–∞–Ω–Ω—ã–µ: {title}, {recipe}, {ingredients}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É—é—Ç
    if title and recipe and ingredients:
        await query.edit_message_text(
            f"‚úÖ –í–∞—à —Ä–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω!\n\n"
            f"üçΩ **–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞**: {title}\n\n"
            f"üìù **–†–µ—Ü–µ–ø—Ç**:\n{recipe}\n\n"
            f"ü•¶ **–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã**:\n{ingredients}"
        )
        logging.info(f"–ò–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω—ã –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}")
    else:
        await query.edit_message_text("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ –Ω–µ –±—ã–ª–∏ –∑–∞–ø–æ–ª–Ω–µ–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user_id}: –Ω–µ–ø–æ–ª–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ")


# –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–∞–Ω–¥–ª–µ—Ä–æ–≤
def setup_handlers(app):
    logging.info("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —Ö–∞–Ω–¥–ª–µ—Ä–æ–≤...")
    app.add_handler(CallbackQueryHandler(handle_edit, pattern="^edit_.*$"))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_edit_input))
    app.add_handler(CallbackQueryHandler(handle_confirm_changes, pattern="^confirm_changes$"))
    logging.info("–•–∞–Ω–¥–ª–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
