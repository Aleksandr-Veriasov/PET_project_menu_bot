import logging
import re
from typing import List, Tuple

from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
)

from app.tgbot.keyboards.builders import InlineKB
from app.tgbot.recipes_modes import RecipeMode

logger = logging.getLogger(__name__)

_CB_RE = re.compile(
    r'^(?P<category>breakfast|main|salad)_recipes(?:_(?P<mode>random|edit))?$'
)


def start_keyboard(new_user: bool) -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è —Å—Ç–∞—Ä—Ç–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ –¥–æ–º–æ–π."""
    if new_user:
        keyboard = [
            [InlineKeyboardButton(
                    'üç≥ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data='upload_recipe'
                )],
            [InlineKeyboardButton('‚ùì –ü–æ–º–æ—â—å', callback_data='help')],
        ]
    else:
        keyboard = [
            [InlineKeyboardButton('üìñ –†–µ—Ü–µ–ø—Ç—ã', callback_data='recipes')],
            [InlineKeyboardButton(
                    'üé≤ –°–ª—É—á–∞–π–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç—ã', callback_data='recipe_random'
                )],
            [InlineKeyboardButton(
                'üç≥ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data='upload_recipe'
                )],
            [InlineKeyboardButton(
                '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data='recipe_edit'
                )]
        ]
    reply_markup = InlineKeyboardMarkup(keyboard)
    return reply_markup


def help_keyboard() -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –ø–æ–º–æ—â–∏."""
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton('üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='start')],
        [InlineKeyboardButton(
            'üç≥ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç', callback_data='upload_recipe'
            )]
    ])
    return keyboard


def home_keyboard() -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –¥–æ–º–∞—à–Ω–µ–≥–æ –º–µ–Ω—é."""
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton('üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='start')]
    ])
    return keyboard


def category_keyboard(
        mode: RecipeMode = RecipeMode.DEFAULT
) -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–æ–≤."""
    if mode is RecipeMode.RANDOM:
        row = [
            [InlineKeyboardButton(
                'üåÖ –ó–∞–≤—Ç—Ä–∞–∫', callback_data='breakfast_recipes_random'
            )],
            [InlineKeyboardButton(
                'üç≤ –û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ',
                callback_data='main_recipes_random'
            )],
            [InlineKeyboardButton(
                'ü•ó –°–∞–ª–∞—Ç', callback_data='salad_recipes_random'
            )]
        ]
    elif mode is RecipeMode.DEFAULT or mode is RecipeMode.SAVE:
        row = [
            [InlineKeyboardButton(
                'üåÖ –ó–∞–≤—Ç—Ä–∞–∫', callback_data='breakfast_recipes'
            )],
            [InlineKeyboardButton(
                'üç≤ –û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ', callback_data='main_recipes'
            )],
            [InlineKeyboardButton('ü•ó –°–∞–ª–∞—Ç', callback_data='salad_recipes')]
        ]
    else:
        row = [
            [InlineKeyboardButton(
                'üåÖ –ó–∞–≤—Ç—Ä–∞–∫', callback_data='breakfast_recipes_edit'
            )],
            [InlineKeyboardButton(
                'üç≤ –û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ', callback_data='main_recipes_edit'
            )],
            [InlineKeyboardButton(
                'ü•ó –°–∞–ª–∞—Ç', callback_data='salad_recipes_edit'
            )]
        ]
    if mode is RecipeMode.SAVE:
        row.append([InlineKeyboardButton(
            '‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel_save_recipe'
        )])
    else:
        row.append([InlineKeyboardButton('üîô –ù–∞–∑–∞–¥', callback_data='start')])
    reply_markup = InlineKeyboardMarkup(row)
    return reply_markup


def build_recipes_list_keyboard(
    items: List[Tuple[int, str]],
    page: int = 0,
    *,
    per_page: int = 5,
    edit: bool = False,
    category_slug: str
) -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–ø–∏—Å–∫–∞ —Ä–µ—Ü–µ–ø—Ç–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π."""
    total = len(items)
    start = max(0, page) * per_page
    end = min(total, start + per_page)
    current = items[start:end]

    rows = [[InlineKeyboardButton(
            text=(f'‚ñ™Ô∏è {recipe["title"]}'),
            callback_data=(
                f'{category_slug}_edit_recipe_{recipe["id"]}'
                if edit else f'{category_slug}_recipe_{recipe["id"]}'
            )
            )] for recipe in current]

    # –ø–∞–≥–∏–Ω–∞—Ü–∏—è
    if end < total:
        rows.append([InlineKeyboardButton(
            '–î–∞–ª–µ–µ ‚è©', callback_data=f'next_{page + 1}'
        )])
    if page > 0:
        rows.append([InlineKeyboardButton(
            '‚è™ –ù–∞–∑–∞–¥', callback_data=f'prev_{page - 1}'
        )])

    # –¥–æ–º–æ–π/–º–µ–Ω—é (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
    rows.append([InlineKeyboardButton('üè† –í –º–µ–Ω—é', callback_data='start')])

    return InlineKeyboardMarkup(rows)


def recipe_edit_keyboard(recipe_id: int, page: int) -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(
                '‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç',
                callback_data=f'edit_recipe_{recipe_id}'
            )],
        [InlineKeyboardButton(
                'üóë –£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç',
                callback_data=f'delete_recipe_{recipe_id}'
            )],
        [InlineKeyboardButton('‚è™ –ù–∞–∑–∞–¥', callback_data=f'next_{page}')],
        [InlineKeyboardButton('üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='start')]
    ])


def choice_recipe_keyboard(page: int) -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ä–µ—Ü–µ–ø—Ç–∞."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(
            '‚è™ –ù–∞–∑–∞–¥',
            callback_data=f'next_{page}'
        )],
        [InlineKeyboardButton('üè† –ù–∞ –≥–ª–∞–≤–Ω—É—é', callback_data='start')]
    ])


def keyboard_choose_field() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ", callback_data="f:title")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞",   callback_data="cancel")],
    ])


def keyboard_save() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="save_changes")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ])


def keyboard_delete() -> InlineKeyboardMarkup:
    return InlineKeyboardMarkup([
        [InlineKeyboardButton("üóë –£–¥–∞–ª–∏—Ç—å", callback_data="delete")],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel")],
    ])


def keyboard_save_cancel_delete(func: str = None) -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è, –æ—Ç–º–µ–Ω—ã –∏ —É–¥–∞–ª–µ–Ω–∏—è."""
    kb = InlineKB()
    if func == 'start_edit':
        kb.button(text='üìù –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ', callback_data='f:title')
    elif func == 'handle_title':
        kb.button(text='‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data='save_changes')
    elif func == 'delete_recipe':
        kb.button(text='üóë –£–¥–∞–ª–∏—Ç—å', callback_data='delete')
    kb.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data='cancel')
    return kb.adjust(1)


def keyboard_save_recipe() -> InlineKeyboardMarkup:
    """ –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞."""
    return InlineKeyboardMarkup([
        [InlineKeyboardButton(
            "‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç", callback_data="save_recipe"
        )],
        [InlineKeyboardButton("‚ùå –û—Ç–º–µ–Ω–∞", callback_data="cancel_save_recipe")],
    ])
