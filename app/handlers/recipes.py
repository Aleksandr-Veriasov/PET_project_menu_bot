import logging
from datetime import datetime
from typing import cast

from telegram import (
    InlineKeyboardButton,
    InlineKeyboardMarkup,
    Message,
    Update
)
from telegram.ext import CallbackContext, ContextTypes

from app.db.db import get_session_context
from app.db.db_utils import (
    add_category_if_not_exists,
    add_recipe,
    add_user_if_not_exists,
    add_video_to_recipe,
    delete_recipe,
    get_recipe,
)
from app.utils.helpers import (
    get_safe_callback_data,
    get_safe_callback_query,
    get_safe_user_data,
)
from app.utils.recipe_edit import start_edit
from app.utils.state import user_data_tempotary

logger = logging.getLogger(__name__)


async def handle_category_choice(
    update: Update, context: CallbackContext
) -> None:
    '''
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–æ–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ä–µ—Ü–µ–ø—Ç–∞.
    –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –≤ –ë–î.
    '''
    query = get_safe_callback_query(update)
    await query.answer()

    user_id = query.from_user.id
    user_info = user_data_tempotary.get(user_id, {})

    # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ
    username: str = query.from_user.username or ''
    first_name: str = query.from_user.first_name or ''
    last_name: str = query.from_user.last_name or ''
    created_at = datetime.now()

    # –í—ã–≤–æ–¥–∏–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
    logger.info(
        f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {query.data}'
    )

    # –õ–æ–≥–∏–∫–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    category = query.data  # –í—ã–±–∏—Ä–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ –±–∞–∑—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    category_name = ''
    if category == 'breakfast':
        category_name = '–ó–∞–≤—Ç—Ä–∞–∫'
    elif category == 'main_course':
        category_name = '–û—Å–Ω–æ–≤–Ω–æ–µ –±–ª—é–¥–æ'
    elif category == 'salad':
        category_name = '–°–∞–ª–∞—Ç'

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏—é –≤ —Ç–∞–±–ª–∏—Ü—É, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
    logger.info(f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user_id} –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é: {category_name}')
    with get_session_context() as session:
        category_obj = add_category_if_not_exists(category_name, session)
        logger.info(f'–ö–∞—Ç–µ–≥–æ—Ä–∏—è {category_name} –¥–æ–±–∞–≤–ª–µ–Ω–∞ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.')

        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        category_id: int = int(category_obj.id)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
        # –ï—Å–ª–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
        add_user_if_not_exists(
            user_id,
            username,
            first_name,
            last_name,
            created_at,
            session
        )

        # –ü–æ–ª—É—á–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ —Ä–µ—Ü–µ–ø—Ç–∞
        title = user_info.get('title', '–ù–µ —É–∫–∞–∑–∞–Ω–æ')
        recipe = user_info.get('recipe', '–ù–µ —É–∫–∞–∑–∞–Ω')
        ingredients = user_info.get('ingredients', '–ù–µ —É–∫–∞–∑–∞–Ω—ã')

        logger.info('–î–æ–±–∞–≤–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö.')
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ—Ü–µ–ø—Ç –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        new_recipe = add_recipe(
            user_id,
            title,
            recipe,
            ingredients,
            category_id,
            session
        )
        logger.info(f'–†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω —Å ID: {new_recipe.id}')
        # –ü–æ–ª—É—á–∞–µ–º –ø—É—Ç—å –∫ –≤–∏–¥–µ–æ –∏–∑ user_data
        user_data = get_safe_user_data(context)
        video_file_id = user_data.get('video_file_id')
        logger.info(f'–ü–æ–ª—É—á–∞–µ–º video_file_id: {video_file_id}')

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å–ª–∏ –≤–∏–¥–µ–æ URL —Å—É—â–µ—Å—Ç–≤—É–µ—Ç
        if video_file_id:
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤–∏–¥–µ–æ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            new_recipe_id: int = int(new_recipe.id)
            add_video_to_recipe(new_recipe_id, video_file_id, session)

        await query.edit_message_text(
            f'‚úÖ –í–∞—à —Ä–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω!\n\n'
            f'üçΩ <b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:</b>\n{title}\n\n'
            f'üîñ <b>–ö–∞—Ç–µ–≥–æ—Ä–∏—è:</b> {category_name}',
            parse_mode='HTML'  # –í–∫–ª—é—á–∞–µ–º HTML –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
        )


async def handle_recipe_choice(
    update: Update, context: ContextTypes.DEFAULT_TYPE
) -> None:
    ''' –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–∑–æ–≤–∞ —Ä–µ—Ü–µ–ø—Ç–∞. '''
    edit = False
    query = get_safe_callback_query(update)
    await query.answer()
    # –ü–æ–ª—É—á–∞–µ–º callback_data
    callback_data = get_safe_callback_data(query)
    if callback_data.startswith('edit_recipe_'):
        recipe_id = int(callback_data.split('_')[2])
        edit = True
        keyboard = [
            [InlineKeyboardButton(
                '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Ü–µ–ø—Ç',
                callback_data=f'redact_recipe_{recipe_id}'
            )],
            [InlineKeyboardButton(
                '–£–¥–∞–ª–∏—Ç—å —Ä–µ—Ü–µ–ø—Ç',
                callback_data=f'delete_recipe_{recipe_id}'
            )]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
    else:
        # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
        recipe_id = int(callback_data.split('_')[1])
    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ—Ü–µ–ø—Ç –ø–æ ID –∏–∑ –±–∞–∑—ã
    with get_session_context() as session:
        recipe = get_recipe(recipe_id, session)

        if not recipe:
            await query.edit_message_text('‚ùå –†–µ—Ü–µ–ø—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.')
            return

        # –ò—â–µ–º –≤–∏–¥–µ–æ, –ø—Ä–∏–≤—è–∑–∞–Ω–Ω–æ–µ –∫ —ç—Ç–æ–º—É —Ä–µ—Ü–µ–ø—Ç—É
        video = recipe.video
        message = cast(Message, query.message)
        if video:
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–∏–¥–µ–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            await message.reply_video(video.video_url)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Ä–µ—Ü–µ–ø—Ç–µ
        ingredients_text = '\n'.join(
            f'- {ingredient.name}' for ingredient in recipe.ingredients
        )
        text = (
            f'üçΩ <b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞:</b> {recipe.title}\n\n'
            f'üìù <b>–†–µ—Ü–µ–ø—Ç:</b>\n{recipe.description}\n\n'
            f'ü•¶ <b>–ò–Ω–≥—Ä–µ–¥–∏–µ–Ω—Ç—ã:</b>\n{ingredients_text}'
        )
        await message.reply_text(
            text,
            parse_mode='HTML',
            reply_markup=reply_markup if edit else None
        )


async def handle_edit_delete_recipe(
    update: Update, context: CallbackContext
) -> None:
    ''' –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –∏–ª–∏ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞. '''
    query = get_safe_callback_query(update)
    await query.answer()

    # –ü–æ–ª—É—á–∞–µ–º ID —Ä–µ—Ü–µ–ø—Ç–∞ –∏–∑ callback_data
    callback_data = get_safe_callback_data(query)
    recipe_id = int(callback_data.split('_')[2])

    if callback_data.startswith('redact_recipe_'):
        # –õ–æ–≥–∏–∫–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        await start_edit(update, context)

    elif callback_data.startswith('delete_recipe_'):
        # –õ–æ–≥–∏–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞
        keyboard = [
            [
                InlineKeyboardButton(
                    '‚úÖ –î–∞, —É–¥–∞–ª–∏—Ç—å',
                    callback_data=f'confirm_delete_{recipe_id}'
                ),
                InlineKeyboardButton(
                    '‚ùå –ù–µ—Ç, –Ω–µ —É–¥–∞–ª—è—Ç—å',
                    callback_data=f'cancel_delete_{recipe_id}'
                )
            ]
        ]
        reply_markup = InlineKeyboardMarkup(keyboard)
        await query.edit_message_text(
            '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç —Ä–µ—Ü–µ–ø—Ç?',
            reply_markup=reply_markup
        )


async def handle_confirm_delete(
    update: Update, context: ContextTypes.DEFAULT_TYPE
) -> None:
    ''' –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏–ª–∏ –æ—Ç–º–µ–Ω—ã —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞. '''
    query = get_safe_callback_query(update)
    await query.answer()

    callback_data = get_safe_callback_data(query)
    recipe_id = int(callback_data.split('_')[2])

    if callback_data.startswith('confirm_delete_'):
        # –£–¥–∞–ª—è–µ–º —Ä–µ—Ü–µ–ø—Ç
        with get_session_context() as session:
            delete_recipe(recipe_id, session)
            await query.edit_message_text('‚úÖ –†–µ—Ü–µ–ø—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.')
    elif callback_data.startswith('cancel_delete_'):
        # –û—Ç–º–µ–Ω–∞ —É–¥–∞–ª–µ–Ω–∏—è
        await query.edit_message_text('‚ùé –£–¥–∞–ª–µ–Ω–∏–µ —Ä–µ—Ü–µ–ø—Ç–∞ –æ—Ç–º–µ–Ω–µ–Ω–æ.')
