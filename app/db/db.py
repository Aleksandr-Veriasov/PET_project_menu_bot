from sqlalchemy import create_engine
from sqlalchemy.engine import Engine
from sqlalchemy.orm import sessionmaker, Session
from typing import Optional, Generator
from contextlib import contextmanager
import logging

from app.core.settings import settings

logger = logging.getLogger(__name__)


class Database:
    """
    –ö–ª–∞—Å—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ–º –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö –∏ —Å–µ—Å—Å–∏—è–º–∏ SQLAlchemy.

    –ü–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞—Ç—å –¥–≤–∏–∂–æ–∫ –ø–æ URL –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π engine.
    –ü—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è–µ—Ç –º–µ—Ç–æ–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ –∏ —Ä–∞–±–æ—Ç—ã —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–º
    –º–µ–Ω–µ–¥–∂–µ—Ä–æ–º.

    –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–∞–∫ –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ, —Ç–∞–∫ –∏ –≤ —Ç–µ—Å—Ç–∞—Ö (—Å –ø–æ–¥–º–µ–Ω–æ–π engine).
    """

    def __init__(
            self, db_url: Optional[str] = None, engine: Optional[Engine] = None
    ):
        if engine is not None:
            self.engine = engine
        elif db_url is not None:
            self.engine = create_engine(
                db_url, pool_pre_ping=True, pool_recycle=1800
            )
        else:
            raise ValueError('–£–∫–∞–∂–∏—Ç–µ db_url –∏–ª–∏ engine')

        self.SessionLocal = sessionmaker(
            bind=self.engine, expire_on_commit=False
        )
        logger.info('üöÄ –î–≤–∏–∂–æ–∫ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω')

    def get_session(self) -> Session:
        logger.info('üíæ –°–æ–∑–¥–∞–Ω–∞ —Å–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö')
        return self.SessionLocal()

    @contextmanager
    def session(self) -> Generator[Session, None, None]:
        db_session = self.get_session()
        try:
            yield db_session
            db_session.commit()
        except Exception as e:
            logger.error(f'‚ùå –û—à–∏–±–∫–∞ –≤ —Å–µ—Å—Å–∏–∏ –ë–î: {e}')
            db_session.rollback()
            raise
        finally:
            db_session.close()
            logger.info('üîí –°–µ—Å—Å–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∑–∞–∫—Ä—ã—Ç–∞')


# –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –¥–ª—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –∫–æ–¥–∞:
db = Database(db_url=settings.database_url)
